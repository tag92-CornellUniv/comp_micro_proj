clean_physeq@tax_table %>%
data.frame()%>%
dplyr::select(ASV,ASVSeq)
# Make fasta headers
asv_seq_df$ASV <- paste0(">", asv_seq_df$ASV)
head(asv_seq_df)
asv_seq_df
asv_seq_df <-
clean_physeq@tax_table %>%
data.frame()%>%
dplyr::select(ASV,ASVSeq)
# Make fasta headers
asv_seq_df$ASV <- paste0(">", asv_seq_df$ASV)
#create fasta object
asv_seq_fasta <- c(rbind(asv_seq_df$ASV, asv_seq_df$ASVSeq))
head(asv_seq_df)
head(asv_seq_fasta)
file=data/04_phylogenetic/asv_seqs.fasta")
# write to a file
write(asv_seq_fasta,
file="data/04_phylogenetic/asv_seqs.fasta")
# write to a file
write(asv_seq_fasta,
file="data/04_phylogeny/asv_seqs.fasta")
# set seed
RANDOM=0110
# fasttree export path
export PATH=/programs/FastTree-2.1.11:$PATH
unrooted_tree <- read.tree("data/04_phylogeny/asvs_unrooted.tree")
unrooted_tree
unrooted_physeq <-
merge_phyloseq(clean_physeq, unrooted_tree)
unrooted_physeq
kingdom_tree <-
ggtree(unrooted_physeq) +
# color tips by kingdom
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("goldenrod1", "cornflowerblue", "grey")) +
# Add title
labs(title = "Unrooted Tree") +
#move the legend to the bottom
theme(legend.position = "bottom"); kingdom_tree
ggtree(unrooted_physeq) +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
# Add title
labs(title = "Unrooted Tree") +
#move the legend to the bottom
theme(legend.position = "bottom")
kingdomtree <-
ggtree(unrooted_physeq) +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Tree") +
theme(legend.position = "bottom")
kingdomtree <-
ggtree(unrooted_physeq)
kingdomtree <-
ggtree(unrooted_physeq)
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 2)
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 1)
viewClade(kingdomtree +
node=37398)
kingdomtree + node=37398
viewClade(kingdom_node_tree ),
viewClade(kingdom_node_tree,
node = 37398)
viewClade(kingdomtree,
node = 37398)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 1)
kingdomnodetree
viewClade(kingdomenodetree,
node = 37398)
viewClade(kingdomnodetree,
node = 37398)
viewClade(kingdomnodetree,
node = 37398)
viewClade(kingdomnodetree,
node = 43513)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 0.5)
viewClade(kingdomnodetree,
node = 43513)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV)),
node = 43513)
kingdomtree <-
ggtree(unrooted_physeq)  +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Tree") +
theme(legend.position = "bottom")
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), size=0.4),
node = 43513)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), size=0.5),
node = 43513)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 0.5)
viewClade(kingdomtree +
geom_text(aes(label=ASV), size=0.5),
node = 43513)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), size=0.5),
node = 43513)
?viewClade
node_info <- data.frame(node = nodeData(unrooted_physeq)$node,
label = nodeData(unrooted_physeq)$label)
str(unrooted_physeq)
if ("37398" %in% node_labels) {
print("Node 37398 found in node.label.")
} else {
print("Node 37398 not found in node.label.")
}
node_labels <- unrooted_physeq$phy_tree$node.label
node_labels <- unrooted_physeq$phy_tree$node.label
kingdomtree <-
ggtree(unrooted_physeq)  +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Tree") +
theme(legend.position = "bottom")
library(treeio)
# Convert unrooted_physeq to phylo object
phylo_tree <- as.phylo(unrooted_physeq)
library(treeio)
# Convert unrooted_physeq to phylo object
phylo_tree <- as.phylo(unrooted_physeq)
version(treeio)
treeio
treeio::as.phylo(unrooted_physeq)
library(phyloseq)
# Extract the phylogenetic tree from phyloseq object
phy_tree <- phy_tree(unrooted_physeq)
# Get node labels
node_labels <- phy_tree$node.label
# Get tip labels
tip_labels <- phy_tree$tip.label
# Check if node 37398 exists in node labels or tip labels
if ("37398" %in% node_labels) {
print("Node 37398 found in node labels.")
} else if ("37398" %in% tip_labels) {
print("Node 37398 found in tip labels.")
} else {
print("Node 37398 not found.")
}
# Get node labels
node_labels <- phy_tree$node.label
node_labels
node_info <- phy_tree$Nnode
node_info
node_info <- phy_tree$tip.label
node_info
phy_tree$edge.length
# Get node labels
node_labels <- phy_tree$node.label
head(node_labels)
unrooted_tree
# Get node labels
node_labels <- phy_tree$edge
head(node_labels)
viewClade(kingdomnodetree +
node = 43513)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 0.4)
viewClade(kingdomnodetree,
node=43513)
viewClade(kingdomnodetree,
node=37398)
node <- "37398"
nodenum <- "37398"
viewClade(kingdomnodetree,
node=nodenum)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 2)
viewClade(kingdomnodetree,
node=nodenum)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV)),
node=node_number)
node_number <- "37398"
viewClade(kingdomnodetree +
geom_text(aes(label=ASV)),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), hjust=0.5),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), vjust=0.3),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), hjust=2, vjust=2),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), vjust=1),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), hjust=1),
node=node_number)
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), hjust=-1),
node=node_number)
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= -0.5, vjust = -0.3, size = 2)
kingdomnodetree
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= 2, vjust = -0.3, size = 0.8)
kingdomnodetree
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= 2, vjust = -0.3, size = 1.5)
kingdomnodetree
kingdomnodetree <-
kingdomtree + geom_text(aes(label=node), hjust= 2, vjust = -0.3, size = 1)
kingdomnodetree
node_number_2 <- "37395"
viewClade(kingdomnodetree +
geom_text(aes(label=ASV), hjust=-1),
node=node_number_2)
unrooted_physeq %>%
subset_taxa(., ASV == "ASV_32951") %>%
tax_table() %>%
data.frame()
unrooted_physeq %>%
subset_taxa(., ASV == "ASV_9195") %>%
tax_table() %>%
data.frame()
unrooted_physeq %>%
subset_taxa(., Kingdom = "NA") %>%
otu_table() %>%
data.frame() %>%
colSums()
unrooted_physeq
subset_physeq <- subset_taxa(unrooted_physeq, Kingdom == "NA")
unrooted_physeq
unrooted_physeq %>%
subset_species(., Kingdom=NA)
?subset_species
unrooted_physeq %>%
subset_species(., is.na(Kingdom))
unrooted_physeq %>%
subset_taxa(., is.na(Kingdom))
unrooted_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table()
unrooted_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
pop_taxa = function(physeq, badTaxa){
allTaxa <-  taxa_names(physeq)
allTaxa <- allTaxa[!(allTaxa %in% badTaxa)]
return(prune_taxa(allTaxa, physeq))}
filtered_physeq <- subset_taxa(unrooted_physeq, !is.na(Kingdom))
filtered_physeq
#check to make sure there is no kingdom=NA in filtered physeq
filtered_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
filtered_physeq
filtered_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
str(filtered_physeq)
filtered_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
str(filtered_physeq)
filtered_physeq %>%
subset_taxa(., is.na(Kingdom))
filtered_physeq %>%
subset_taxa(., is.na(Kingdom))
na_taxa <- subset_taxa(filtered_physeq, is.na(Kingdom))
# Print the result
print(na_taxa)
na_taxa <- subset_taxa(filtered_physeq, Kingdom == "NA")
#Woah... that is a lot!!!! But still remove and examine tree.
filtered_physeq <- subset_taxa(unrooted_physeq, !is.na(Kingdom))
# Check if any taxa with Kingdom "NA" exist in the filtered_physeq object
na_taxa <- subset_taxa(filtered_physeq, Kingdom == "NA")
# Remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(unrooted_physeq, !is.na(Kingdom))
# Check if any taxa with Kingdom "NA" exist in the filtered_physeq object
na_taxa <- subset_taxa(filtered_physeq, Kingdom == "NA")
str(filtered_physeq)
# Check if the "Kingdom" variable is in the tax_table
kingdom_in_tax_table <- "Kingdom" %in% colnames(tax_table(filtered_physeq))
if (kingdom_in_tax_table) {
# Remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(filtered_physeq, tax_table(filtered_physeq)[, "Kingdom"] != "NA")
# Check if any taxa with Kingdom "NA" exist in the filtered_physeq object
na_taxa <- subset_taxa(filtered_physeq, tax_table(filtered_physeq)[, "Kingdom"] == "NA")
# Print the result
print(na_taxa)
} else {
print("The 'Kingdom' variable is not found in the tax_table.")
}
if (kingdom_in_tax_table) {
# Remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(filtered_physeq, tax_table(filtered_physeq)[, "Kingdom"] != "NA")
# Check if any taxa with Kingdom "NA" exist in the filtered_physeq object
na_taxa <- subset_taxa(filtered_physeq, tax_table(filtered_physeq)[, "Kingdom"] == "NA")
# Print the result
print(na_taxa)
} else {
print("The 'Kingdom' variable is not found in the tax_table.")
}
unrooted_physeq
unrooted_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
# Remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(filtered_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
# Print the resulting filtered_physeq object
print(filtered_physeq)
print("The 'Kingdom' variable is not found in the tax_table.")
# Remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(filtered_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
if ("Kingdom" %in% colnames(tax_table(filtered_physeq))) {
# remove taxa where Kingdom is "NA" from the physeq object
filtered_physeq <- subset_taxa(filtered_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
}
filtered_physeq <- subset_taxa(filtered_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
filtered_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
# Subsetting taxa where Kingdom is "NA"
na_taxa_physeq <- subset_taxa(filtered_physeq, is.na(tax_table(filtered_physeq)[, "Kingdom"]))
# Subsetting taxa where Kingdom is "NA"
na_taxa_physeq <- subset_taxa(filtered_physeq, tax_table(filtered_physeq)[, "Kingdom"] == "NA")
filtered_physeq <- subset_taxa(filtered_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
filtered_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
filtered_physeq
filtered_physeq %>%
otu_table()
filtered_physeq %>%
tax_table()
filtered_physeq %>%
tax_table() %>%
data.frame()
filtered_physeq %>%
tax_table() %>%
data.frame()
filtered_physeq %>%
tax_table() %>%
data.frame() %>%
View()
filtered_physeq %>%
subset_taxa(., is.na(Kingdom))
filtered_physeq %>%
tax_table() %>%
data.frame() %>%
View()
kingdomtree <-
ggtree(filtered_physeq)  +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Tree") +
theme(legend.position = "bottom")
clean_physeq
clean_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
filtered_physeq <- subset_taxa(clean_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
filtered_physeq %>%
tax_table() %>%
data.frame() %>%
View()
filtered_physeq <- subset_taxa(clean_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
clean_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
clean_physeq %>%
subset_taxa(., is.na(Kingdom)) %>%
otu_table() %>%
data.frame() %>%
colSums()
filtered_physeq <- subset_taxa(clean_physeq, !is.na(tax_table(filtered_physeq)[, "Kingdom"]))
filtered_physeq %>%
tax_table() %>%
data.frame() %>%
View()
filtered_physeq <- subset_taxa(clean_physeq, !is.na(tax_table(clean_physeq)[, "Kingdom"]))
filtered_physeq %>%
tax_table() %>%
data.frame() %>%
View()
# How many ASVs were removed?
clean_physeq
filtered_physeq
# 35337 starting taxa, 26785 ending taxa
35337-26785
print(c("The number of taxa removed is",35337-26785) )
print(c("The number of taxa removed is:",35337-26785) )
print(c("The percentage of NA Kingdom taxa removed is", 26785/35337))
print(c("The percentage of NA Kingdom taxa retained is", 26785/35337))
print(c("The percentage of NA Kingdom taxa removed is", (35337-26785/35337))
print(c("The percentage of NA Kingdom taxa removed is", (35337-26785/35337)))
print(c("The percentage of NA Kingdom taxa removed is", (35337-26785)/35337))
colnames(filtered_physeq@tax_table)
asv_seq_df_2 <-
filtered_physeq@tax_table %>%
data.frame()%>%
dplyr::select(ASV,ASVSeq)
# Make fasta headers
asv_seq_df_2$ASV <- paste0(">", asv_seq_df_2$ASV)
asv_seq_df_filtered <-
filtered_physeq@tax_table %>%
data.frame()%>%
dplyr::select(ASV,ASVSeq)
# Make fasta headers
asv_seq_df_filtered$ASV <- paste0(">", asv_seq_df_filtered$ASV)
#create fasta object
asv_seq_fasta_filtered <- c(rbind(asv_seq_df_filtered$ASV, asv_seq_df_filtered$ASVSeq))
head(asv_seq_fasta_filtered)
# write to a file
write(asv_seq_fasta_filtered,
file="data/04_phylogeny/asv_seqs_filtered.fasta")
cd data/04_phylogeny/
unrooted_filtered_tree <- read.tree("data/04_phylogeny/asvs_unrooted_filtered.tree")
unrooted_filtered_tree
unrooted_physeq_filtered <-
merge_phyloseq(filtered_physeq, unrooted_tree_filtered)
unrooted_physeq_filtered <-
merge_phyloseq(filtered_physeq, unrooted_filtered_tree)
unrooted_physeq
kingdomtree <-
ggtree(unrooted_physeq_filtered)  +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Filtered Tree") +
theme(legend.position = "bottom")
filtered_kingdomtree <-
ggtree(unrooted_physeq_filtered)  +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Filtered Tree") +
theme(legend.position = "bottom")
filtered_kingdomtree
filtered_kingdomtree <-
ggtree(unrooted_physeq_filtered)  +
geom_text(aes(label=ASV), hjust=-0.5, size=1) +
geom_tippoint(mapping = aes(color = Kingdom)) +
scale_color_manual(values = c("pink", "maroon", "grey")) +
labs(title = "Unrooted Filtered Tree") +
theme(legend.position = "bottom")
filtered_kingdomtree
is.rooted(kingdomtree)
is.rooted(phy_tree)
is.rooted(unrooted_filtered_tree)
phy_tree
is.rooted(unrooted_phyloseq)
is.rooted(unrooted_physeq)
is.rooted(unrooted_tree)
midpoint_rooted_unfiltered_tree <-
midpoint.root(unrooted_tree)
midpoint_rooted_filtered_tree <-
midpoint.root(unrooted_filtered_tree)
ggtree(midpoint_rooted_filtered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))
```{r rooting-unfiltered-tree}
is.rooted(unrooted_tree)
midpoint_rooted_unfiltered_tree <-
midpoint.root(unrooted_tree)
is.rooted(midpoint_rooted_unfiltered_tree)
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color="Kingdom"))+
labs(title="Rooted Unfiltered Tree")
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))+
labs(title="Rooted Unfiltered Tree")
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))+
labs(title="Rooted Unfiltered Tree")
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))+
labs(title="Rooted Unfiltered Tree")
str(midpo)
str(midpoint_rooted_unfiltered_tree)
is.rooted(filtered_kingdomtree)
is.rooted(unrooted_physeq)
is.rooted(unrooted_filtered_tree)
unfiltered_tree_toroot <- phy_tree(unrooted_physeq)
is.rooted(unfiltered_tree_toroot)
midpoint_rooted_unfiltered_tree <-
midpoint.root(unfiltered_tree_toroot)
is.rooted(midpoint_rooted_unfiltered_tree)
ggtree(midpoint_rooted_unfiltered_tree) +
geom_tippoint(mapping=aes(color=Kingdom))+
labs(title="Rooted Unfiltered Tree")
